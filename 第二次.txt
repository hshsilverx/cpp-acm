第二次
2.1表中查数

int main()
{

    int n,i;
    cin>>n;
    for(i=0;i<n;i++)
    {
        int x,y;
        int ans=1;
        cin>>x>>y;
        if (x==y&&x%2==0){ans=x+y;cout<<ans<<endl;}
        else if (x==y  &&x%2==1){ans=x+y-1;cout<<ans<<endl;}
        else if (x==y+2&&x%2==0){ans=x+y;cout<<ans<<endl;}
        else if (x==y+2&&x%2==1){ans=x+y-1;cout<<ans<<endl;}
        else {cout<<"No Number"<<endl;}
    }
}

2.2判断进位
#include<iostream>
using namespace std;

int main()
{
    int n,m;
    int N=10;
    int c[N];
    int d[N];
    while(cin>>n>>m)
    {
        int num,i,j,k;
        num=0;
        for (i=0;i<N;i++)
            c[i]=d[i]=0;
        if(n==0&&m==0)
            break;
        j=k=N;
        while(n>0)
        {
            c[j]=n%10;
            n/=10;
            j--;
        }
        while(m>0)
        {
            d[k]=m%10;
            m/=10;
            k--;
        }
        for (i=N;i>0;i--)
        {
            d[i]+=c[i];
            if (d[i]>=10)
            {
                num++;
                d[i-1]++;
                d[i]%=10;
            }
        }
        if (num==0)
            cout<<"No carry operation."<<endl;
        else if (num==1)
            cout<<num<<" carry operation."<<endl;//注意单复数
        else
            cout<<num<<" carry operations."<<endl;
    }

}

2.3十进制数在二进制数中1的位置
#include<iostream>
using namespace std;

int main()
{
    int n,i;
    cin>>n;

    {
        int po,m,space;
        for (i=0;i<n;i++)
        {
            cin>>m;
            space=1;//space 的作用是判断是否为第一个输出的值，如果是不打空格。
            po=0;
            while(m)
            {
                if(m%2)
            {
                if (space==1)
                {
                    cout<<po;
                    space=0;
                }
                else
                {
                    cout<<" "<<po;
                }

            }
                po++;//一定注意这两行的位置，在哪个if括号内，否则可能会循环出错。
                m=m/2;
            }
            cout<<"\n";
        }

    }
}


2.4数字根
一下是两个未接受的答案，第一个WA，第二个TLE（超时）

#include<iostream>
using namespace std;

int main()
{
    int num;
    while(cin>>num)
    {
        if(num==0)
        {
            break;
        }
        else
        {
            num=num%9?num%9:9;
            cout<<num<<endl;
        }
    }

}


#include<iostream>
using namespace std;

int ans,n,m,num;
int add(int n)
{
    ans=0;
    while(n)
    {
        m=n%10;
        ans=ans+m;
        n/10;
    }
    return ans;
}

int main()
{
    while(cin>>num)
    {
    ans=0;
    if(num==0)
    {
        break;
    }
    else
    {
        while(num>9)
    {
        num=add(num);
    }
        cout<<num<<endl;
       }
   }
   return 0;
}

一个参考方法：字符串数组
#include<iostream>

using namespace std;

int main()
{
    char a[10000];
    int ans,i;
    while(cin>>a)
    {
        if(a[0]=='0')//这个地方一定要加判定0的情况
        {
            break;
        }
        else
        {
            ans=0;
        for (i=0;a[i]!='\0';i++)
        {
            ans+=a[i]-'0';
            if (ans>9)
            {
                ans=ans%10+ans/10;
            }
        }
        cout<<ans<<endl;
        }

    }
}


2.5求逆序数问题
可以阅读：http://www.bubuko.com/infodetail-2052343.html
#include<iostream>

using namespace std;

int main()
{
    int line,num,num2,i,j;
    cin>>line;
    num2=0;//注意初始化
    while(line--)
    {
        cin>>num;
        num2++;
        int a[10000];
        int ans =0;
        for (i=0;i<num;i++)
        {
            cin>>a[i];
        }
        for (i=0;i<num;i++)
        {
            for (j=i+1;j<num;j++)
        {
            if(a[i]>a[j])
            {
                ans++;
            }
        }
        }
        cout<<"Scenario #"<<num2<<":"<<endl;
        cout<<ans<<endl<<endl;

    }
}

